{"version":3,"sources":["Components/timeCounter.js","Components/ModalSobre.js","App.js","reportWebVitals.js","index.js"],"names":["require","DateTime","Interval","Timer","useState","musicas","setMusicas","saideras","setSaideras","diference","setDiference","useEffect","interval_id","setInterval","dateStart","local","now","minutes","fromDateTimes","length","musicasTemp","Math","round","toLocaleString","saiderasTemp","diff","toObject","clearInterval","className","years","months","days","hours","seconds","ModalSobre","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","href","Footer","Button","variant","onClick","onHide","App","React","modalShow","setModalShow","show","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAI8BA,EAAQ,IAA/BC,E,EAAAA,SAAUC,E,EAAAA,SAqEFC,MAnEf,WAAiB,MAIiBC,mBAAS,GAJ1B,mBAINC,EAJM,KAIGC,EAJH,OAKmBF,mBAAS,GAL5B,mBAKNG,EALM,KAKIC,EALJ,OAMqBJ,mBAAS,GAN9B,mBAMNK,EANM,KAMKC,EANL,KAyCb,OAjCAC,qBAAU,WACN,IAAMC,EAAcC,aAAY,WAG5B,IAAIC,EAAYb,EAASc,MAAM,KAAM,GAAI,EAAG,EAAG,IAC3CC,EAAMf,EAASe,MAOfC,EAHYf,EAASgB,cAAcJ,EAAWE,GAG1BG,OAAO,WAG3BC,EAAcC,KAAKC,MAAML,EAAQ,KAErCX,GAAW,SAAAD,GAAO,OAAIe,EAAYG,eAAe,YAIjD,IAAIC,EAAeH,KAAKC,OAAOL,EAAU,IAAI,GAC7CT,GAAY,SAAAD,GAAQ,OAAIiB,EAAaD,eAAe,YAIpDb,GAAa,SAAAD,GAAS,OAAIO,EAAIS,KAAKX,EAAW,CAAC,QAAS,SAAU,OAAQ,QAAS,UAAW,YAAYY,gBAC3G,KAEH,OAAO,kBAAMC,cAAcf,OAK3B,sBAAKgB,UAAU,YAAf,UAEI,oBAAIA,UAAU,aAAd,iDACA,uBACA,0JAGA,qBAAIA,UAAU,WAAd,UAA0BvB,EAA1B,2CACA,qBAAKuB,UAAU,UAAf,qDAGA,qBAAIA,UAAU,WAAd,UAA0BrB,EAA1B,eACA,qBAAKqB,UAAU,UAAf,qHAGA,qBAAIA,UAAU,WAAd,yBAAsCnB,EAAUoB,MAAhD,UAA8DpB,EAAUqB,OAAxE,WAAwFrB,EAAUsB,KAAlG,UAA+GtB,EAAUuB,MAAzH,WAAwIvB,EAAUQ,QAAlJ,cAAsKI,KAAKC,MAAMb,EAAUwB,SAA3L,yCACA,qBAAKL,UAAU,UAAf,8EAEA,2B,uBChBGM,MA5Cf,SAAoBC,GAChB,OACI,eAACC,EAAA,EAAD,yBAAOR,UAAU,aACTO,GADR,IAEIE,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,EAJZ,UAOI,cAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACL,EAAA,EAAMM,MAAP,CAAaC,GAAG,gCAAhB,qBAMJ,eAACP,EAAA,EAAMQ,KAAP,WACI,kDACA,iEAIA,sCACA,6CAIA,8CACA,wEAIA,iDACA,mBAAGC,KAAK,wDAAR,sEAIJ,cAACT,EAAA,EAAMU,OAAP,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,QAASd,EAAMe,OAAtC,2BCFDC,MA5Bf,WAAe,MAGoBC,IAAMhD,UAAS,GAHnC,mBAGPiD,EAHO,KAGIC,EAHJ,KAKd,OACC,sBAAK1B,UAAU,MAAf,UAGC,qBAAKA,UAAU,aAAf,SACC,cAACmB,EAAA,EAAD,CAAQC,QAAQ,QAAQC,QAAS,kBAAMK,GAAa,IAApD,qBAID,qBAAK1B,UAAU,UAAf,SACC,cAAC,EAAD,MAID,cAAC,EAAD,CACC2B,KAAMF,EACNH,OAAQ,kBAAMI,GAAa,UCvBhBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36f3a31e.chunk.js","sourcesContent":["import './../App.css';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst{ DateTime, Interval } = require(\"luxon\");\r\n\r\nfunction Timer() {\r\n\r\n    // TODO: Atualizar para que comece imediatamente\r\n\r\n    const [musicas, setMusicas] = useState(0);\r\n    const [saideras, setSaideras] = useState(0);\r\n    const [diference, setDiference] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval_id = setInterval(() => {\r\n            // Inicializa a data inicial do show e o momento que o site carrega\r\n            // Usa a ferramenta DateTime da biblioteca \"luxon\"\r\n            var dateStart = DateTime.local(2015, 11, 1, 0, 30);\r\n            var now = DateTime.now();\r\n\r\n            // Calcula o intervalo de tempo entre as duas datas\r\n            // Usa a ferramenta Interval da biblioteca \"luxon\"\r\n            var intervalo = Interval.fromDateTimes(dateStart, now);\r\n\r\n            // Recebe a duração em minutos do intervalo\r\n            var minutes = intervalo.length('minutes');\r\n\r\n            // Calcula a quantidade aproximada de músicas (considerando cada música com 3m30s)\r\n            var musicasTemp = Math.round(minutes/3.5);\r\n            // Converte para uma string\r\n            setMusicas(musicas => musicasTemp.toLocaleString('pt-BR'));\r\n\r\n            // Calcula o número de saideras pedidas\r\n            // Considera chamada de saidera a cada duas músicas, e que o show durou 90 minutos antes da primeira saidera\r\n            var saiderasTemp = Math.round((minutes - 90)/7);\r\n            setSaideras(saideras => saiderasTemp.toLocaleString('pt-BR'));\r\n\r\n            // Calcula quanto tempo se passou desde o início do show\r\n            // Usa o 'diff',que nos mostra anos, meses, dias e horas e transforma em um objeto para fácil obtenção dos dados\r\n            setDiference(diference => now.diff(dateStart, [\"years\", \"months\", \"days\", \"hours\", \"minutes\", \"seconds\"]).toObject());\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval_id);\r\n    }, )\r\n\r\n    // HTML do texto\r\n    return (\r\n        <div className=\"timerText\">\r\n            {/* Header */}\r\n            <h1 className=\"textBorder\">Show infinito do Skank - Inter 2015</h1>\r\n            <br/>\r\n            <h2>O show do Skank no Inter 2015 tá rolando até hoje, mas quantas músicas e saideras já rolaram desde então?</h2>\r\n\r\n            {/* Quantidade de músicas tocadas */}\r\n            <h2 className=\"dataText\">{musicas} músicas desde o início do show</h2>\r\n            <div className=\"subText\">Considerando aprox. 3m30s por música</div>\r\n\r\n            {/* Quantidade de saideras pedidas */}\r\n            <h2 className=\"dataText\">{saideras} saideras</h2>\r\n            <div className=\"subText\">Considerando 2 músicas por \"saidera\" e que a primeira rolou após 1h30 depois do início do show</div>\r\n\r\n            {/* Tempo desde o início do show */}\r\n            <h3 className=\"dataText\">Se passaram {diference.years} anos, {diference.months} meses, {diference.days} dias, {diference.hours} horas, {diference.minutes} minutos e {Math.round(diference.seconds)} segundos desde o início do show</h3>\r\n            <div className=\"subText\">Considerando que o show começou às 00h30 do dia 01/11/2015</div>\r\n\r\n            <br/>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Timer;\r\n","import React from 'react';\r\n\r\n// Import do componente Modal e Botão do Bootstrap\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction ModalSobre(props) {\r\n    return (\r\n        <Modal className=\"modalText\"\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            {/* Header com botão de close */}\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Sobre\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n\r\n            {/* Corpo do modal */}\r\n            <Modal.Body>\r\n                <h4>Desenvolvido por</h4>\r\n                <p>\r\n                    Felipe Pimenta - UNESP Rio Preto\r\n                </p>\r\n\r\n                <h4>Foto</h4>\r\n                <p>\r\n                    Indie CLicks\r\n                </p>\r\n\r\n                <h4>O Inter 2018</h4>\r\n                <p>\r\n                    Evento realizado por Criativa | O Inter\r\n                </p>\r\n\r\n                <h4>Código fonte</h4>\r\n                <a href=\"https://github.com/felimenta970/skank-saidera-counter\">https://github.com/felimenta970/skank-saidera-counter</a>\r\n            </Modal.Body>\r\n\r\n            {/* Footer do modal, com botão de close */}\r\n            <Modal.Footer>\r\n                <Button variant=\"dark\" onClick={props.onHide}>Fechar</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ModalSobre;","import React from 'react';\r\n\r\n// Import do componente com textos de timer\r\nimport Timer from './Components/timeCounter.js';\r\n\r\n// Import do botão do Bootstrap\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n// Import do componente Modal\r\nimport ModalSobre from './Components/ModalSobre.js';\r\n\r\n// Import css\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n\t// Use state do React para controle de mostrar ou não o modal\r\n\tconst [modalShow, setModalShow] = React.useState(false);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\r\n\t\t\t{/* Componente do botão com a chamada para o modal */}\r\n\t\t\t<div className=\"buttonLine\">\r\n\t\t\t\t<Button variant=\"light\" onClick={() => setModalShow(true)}>Sobre</Button>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t{/* O texto de timer */}\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<Timer />\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Modal customizado, só aparece ao clicar no botão */}\r\n\t\t\t<ModalSobre\r\n\t\t\t\tshow={modalShow}\r\n\t\t\t\tonHide={() => setModalShow(false)}\r\n\t\t\t/>\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}