{"version":3,"sources":["logo.svg","timeCounter.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["require","DateTime","Interval","Timer","dateStart","local","now","minutes","fromDateTimes","length","musicas","Math","round","toLocaleString","saideras","diference","diff","toObject","className","years","months","days","hours","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAAe,I,aCIeA,EAAQ,IAA/BC,E,EAAAA,SAAUC,E,EAAAA,SAkDFC,MAhDf,WAII,IAAIC,EAAYH,EAASI,MAAM,KAAM,GAAI,EAAG,EAAG,IAC3CC,EAAML,EAASK,MAOfC,EAHYL,EAASM,cAAcJ,EAAWE,GAG1BG,OAAO,WAK3BC,EAFcC,KAAKC,MAAML,EAAQ,KAEXM,eAAe,SAKrCC,EADeH,KAAKC,OAAOL,EAAU,IAAI,GACjBM,eAAe,SAIrCE,EAAYT,EAAIU,KAAKZ,EAAW,CAAC,QAAS,SAAU,OAAQ,UAAUa,WAG5E,OACI,sBAAKC,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,iDACA,uBACA,0JAEA,qBAAIA,UAAU,aAAd,UAA4BR,EAA5B,2CACA,qBAAKQ,UAAU,UAAf,qDAEA,qBAAIA,UAAU,aAAd,UAA4BJ,EAA5B,eACA,qBAAKI,UAAU,UAAf,qHAEA,qBAAIA,UAAU,aAAd,yBAAwCH,EAAUI,MAAlD,UAAgEJ,EAAUK,OAA1E,WAA0FL,EAAUM,KAApG,WAAkHV,KAAKC,MAAMG,EAAUO,OAAvI,0CC5BGC,MAdf,WAII,OACI,sBAAKL,UAAU,SAAf,UACI,oFACA,iICUGM,MAbf,WACC,OACC,sBAAKN,UAAU,MAAf,UACC,qBAAKA,UAAU,UAAf,SACC,cAAC,EAAD,MAGD,cAAC,EAAD,QCJYO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.884df915.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import './App.css';\r\n\r\nimport React from 'react';\r\n\r\nconst{ DateTime, Interval } = require(\"luxon\");\r\n\r\nfunction Timer() {\r\n\r\n    // Inicializa a data inicial do show e o momento que o site carrega\r\n    // Usa a ferramenta DateTime da biblioteca \"luxon\"\r\n    var dateStart = DateTime.local(2015, 11, 1, 0, 30);\r\n    var now = DateTime.now();\r\n\r\n    // Calcula o intervalo de tempo entre as duas datas\r\n    // Usa a ferramenta Interval da biblioteca \"luxon\"\r\n    var intervalo = Interval.fromDateTimes(dateStart, now);\r\n\r\n    // Recebe a duração em minutos do intervalo\r\n    var minutes = intervalo.length('minutes');\r\n\r\n    // Calcula a quantidade aproximada de músicas (considerando cada música com 3m30s)\r\n    var musicasTemp = Math.round(minutes/3.5);\r\n    // Converte para uma string\r\n    var musicas = musicasTemp.toLocaleString('pt-BR');\r\n\r\n    // Calcula o número de saideras pedidas\r\n    // Considera chamada de saidera a cada duas músicas, e que o show durou 90 minutos antes da primeira saidera\r\n    var saiderasTemp = Math.round((minutes - 90)/7);\r\n    var saideras = saiderasTemp.toLocaleString('pt-BR');\r\n\r\n    // Calcula quanto tempo se passou desde o início do show\r\n    // Usa o 'diff',que nos mostra anos, meses, dias e horas e transforma em um objeto para fácil obtenção dos dados\r\n    const diference = now.diff(dateStart, [\"years\", \"months\", \"days\", \"hours\"]).toObject();\r\n\r\n    // HTML do texto\r\n    return (\r\n        <div className=\"timerText\">\r\n            <h1 className=\"textBorder\">Show infinito do Skank - Inter 2015</h1>\r\n            <br/>\r\n            <h2>O show do Skank no Inter 2015 tá rolando até hoje, mas quantas músicas e saideras já rolaram desde então?</h2>\r\n\r\n            <h2 className=\"textBorder\">{musicas} músicas desde o início do show</h2>\r\n            <div className=\"subText\">Considerando aprox. 3m30s por música</div>\r\n\r\n            <h2 className=\"textBorder\">{saideras} saideras</h2>\r\n            <div className=\"subText\">Considerando 2 músicas por \"saidera\" e que a primeira rolou após 1h30 depois do início do show</div>\r\n\r\n            <h3 className=\"textBorder\">Se passaram {diference.years} anos, {diference.months} meses, {diference.days} dias e {Math.round(diference.hours)} horas desde o início do show</h3>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Timer;\r\n","import './App.css';\r\n\r\nimport React from 'react';\r\n\r\n\r\nfunction Footer() {\r\n\r\n\r\n    // HTML do texto\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>Site por Felipe Pimenta (Tog 6.0) - UNESP Rio Preto</p>\r\n            <p>Foto por Indie Clicks | Evento realizado por Criativa/O Inter - Todos os direitos reservados</p>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Footer;\r\n","import logo from './logo.svg';\r\n\r\nimport Timer from './timeCounter.js';\r\nimport Footer from './Footer.js';\r\n\r\nimport './App.css';\r\n\r\n\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\t<Timer />\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<Footer />\r\n\t\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}